#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/assets/stylesheets/*' do
  filter :sass, Compass.sass_engine_options
end

route '/assets/stylesheets/*' do
  '/css/' + File.basename(item.identifier) + '.css'
end

route '/assets/javascripts/*' do
  '/js/' + File.basename(item.identifier) + '.js'
end

compile '/assets/' do
end

compile '*' do
  if item[:filename] == 'content/bootstrap_test.html'
    filter :erb
    layout 'bootstrap_powered'
  elsif item[:filename] == 'content/foundation.html'
    filter :erb
  elsif item[:extension] == 'md'
    filter :kramdown
    layout 'default'
  elsif item[:extension] == 'css'
    # don’t filter stylesheets
  elsif item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout 'default'
  end
end

route '/assets/*' do
  # /assets/foo.html/ => /foo.html
  item.identifier[7..-2]
end

route '*' do
  if item[:extension] == 'css'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.css'
  elsif item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
