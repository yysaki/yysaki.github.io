#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (<.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

# http://nanoc.ws/docs/guides/paginating-articles/

preprocess do
  paginate_articles
end
compile '/blog/archive/**/*' do
  filter :erb
  layout '/default.*'
end
route '/blog/archive/**/*' do
  item.identifier.without_ext + '/index.html'
end

compile '/index.*' do
  filter :erb
  layout '/default.*'
end
route '/index.*' do
  item.identifier.without_exts + '.html'
end

compile '/assets/stylesheets/**/*.{css,scss}' do
  filter :sass, Compass.sass_engine_options
end
route '/assets/stylesheets/**/*.{css,scss}' do
  '/css/' + File.basename(item.identifier.without_ext) + '.css'
end

compile '/assets/javascripts/**/*.{js}' do
  filter :uglify_js if ENV['NANOC_ENV'] == 'production'
end
route '/assets/javascripts/**/*.{js}' do
  '/js/' + File.basename(item.identifier.without_ext) + '.js'
end

compile '/posts/**/*' do
  filter :fenced_code_block
  filter :kramdown
  layout '/article.*'
  layout '/default.*'
end
route '/posts/**/*' do
  post_url(item, has_extension: true)
end

# for static assets, e.g. /static/images/search.png to output/images/search.png
compile '/assets/**/*' do
end
route '/assets/**/*' do
  # /assets/foo.html/ => /foo.html
  item.identifier.to_s[7..-2]
end

compile '/atom.*' do
  filter :erb
end
route '/atom.*' do
  item.identifier.without_exts + '.xml'
end

compile '/CNAME' do
end
route '/CNAME' do
  item.identifier.to_s
end
passthrough '/humans.txt'
passthrough '/robots.txt'

compile '/static/**/*' do
end

route '/static/**/*' do
  # /static/foo.html → /foo.html
  item.identifier.to_s.sub(/\A\/static/, '')
end

layout '/**/*.erb', :erb
